# -*- coding: utf-8 -*-
"""3.knn_digits.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13J5bYla6u1tyOc6xeDEO4oFU0oDsTRJP
"""

import pandas as pd

from sklearn.datasets import load_digits
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

digits = load_digits()

dir(digits)

df = pd.DataFrame(digits.data, columns=digits.feature_names)
df['target'] = digits.target
df.head()

X_train, X_test, y_train, y_test = train_test_split(df.drop('target',axis='columns'), df.target, test_size=0.3, random_state=5)

from sklearn.model_selection import GridSearchCV

clf = GridSearchCV(KNeighborsClassifier(),{
    'n_neighbors': [3,4,5,6,7,8,9,10]
}, cv=5, return_train_score=False)

clf.fit(X_train, y_train)

pd.DataFrame(clf.cv_results_)

knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(X_train, y_train)

knn.score(X_test, y_test)

from sklearn.metrics import confusion_matrix
y_pred = knn.predict(X_test)

cm = confusion_matrix(y_test, y_pred)
cm

from sklearn.metrics import classification_report
print(classification_report(y_test, y_pred))

from sklearn.metrics import confusion_matrix, classification_report, ConfusionMatrixDisplay

cm = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=digits.target_names)
disp.plot(cmap='viridis')
plt.title("Confusion Matrix for Digits Dataset (KNN)")
plt.show()